@font-face{font-family:'BigJohn';src:url(../fonts/BIGJOHN.otf)}@font-face{font-family:'OpenSans';src:url(../fonts/OpenSans-Regular.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Regular.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Black.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Light.ttf);font-weight:100;font-style:normal}@font-face{font-family:'Roboto';src:url(../fonts/Roboto-Regular.ttf)}@font-face{font-family:'MyriadPro';src:url(../fonts/MyriadPro-Regular.ttf)}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus{outline:0}.container{width:100%;height:100%;margin:0 auto;overflow:hidden;min-width:250px;position:relative}ul{list-style:none}a{text-decoration:none;color:inherit;-webkit-transition:.2s;transition:.2s}h1,h2,h3,h4,ul{margin:0;padding:0}.wrapper{max-width:1150px;margin:0 auto;padding:0 15px}.header{padding:0 55px}.header__wrap{background:#19d5cd;background:-webkit-gradient(linear,left top,right top,from(#19d5cd),color-stop(25%,#87dece),to(#fff));background:linear-gradient(90deg,#19d5cd 0%,#87dece 25%,#fff 100%);min-height:250px;margin:30px auto 50px;border-radius:20px;max-width:2000px;padding:0 30px}.header .nav__list,.header__main,.header__top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__main,.header__top{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:40px 30px}.header__logo img{height:50px}.header .nav__bar{width:35%}.header .nav__list{text-transform:uppercase;font-family:Arial,Helvetica,sans-serif}.header .nav__el{display:block}.header__main{padding:50px 0 0;max-width:800px;margin:0 auto;min-height:600px;position:relative}.header__hello{color:#190468}.header__title{font-size:55px;padding-bottom:20px;font-family:BigJohn;text-transform:uppercase}.header__subtitle{font-size:25px;font-family:SourceSansPro}.header__button{padding:7px 15px;margin:30px 15px 0 0;display:inline-block;font-size:14px;font-family:OpenSans;background:#fff}.header__image img{height:600px;position:absolute;bottom:-50px;right:50px}.skills{padding:100px 0;max-width:1200px;margin:0 auto}.skills__title{padding-bottom:50px;font-size:36px}.skills__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:0 auto;max-width:1100px}.skill__el{width:30%;text-align:center;padding:10px 20px}.skill__title{font-size:24px;padding-bottom:7px}.skill__desc{color:#333}.portfolio{max-width:1200px;margin:0 auto;padding:100px 0}.portfolio__title{font-size:36px;padding-bottom:50px}.portfolio__works{max-width:800px;margin:0 auto}.work{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:45px}.work__img{width:50%}.work__img img{width:350px}.work__desc{width:45%}.aboutme{max-width:1200px;margin:0 auto;padding:100px 0}.aboutme__title{font-size:36px;padding-bottom:50px}.aboutme__facts,.aboutme__main{display:-webkit-box;display:-ms-flexbox;display:flex}.aboutme__main{max-width:1000px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto}.aboutme__img img{width:80%}.aboutme__facts{width:40%}.facts__list{padding:15px 20px}.facts__item{line-height:25px}.contacts{background:#243136}.contacts__wrap{max-width:1200px;margin:0 auto;padding:100px 0}.contacts__title{padding-bottom:50px;font-size:36px}.contacts__main{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;max-width:600px;margin:0 auto}.contacts__form{width:50%}.contacts .input-wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:20px}.contacts__field,.contacts__msg{border:1px #666 solid;width:48%}.contacts__msg{width:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
